1. BufferedReader:
- reads text from a character-input stream
- buffering is used for efficient reading of characters, arrays and lines
- buffer size maybe specified, or default size is used

BufferedReader br = new BufferedReader(new FileReader(new File("input.txt"));

2. FileReader:
- convenient to read character files
- constructor assumes default character encoding and default byte-buffer size

FileReader fr = new FileReader(new File("input.txt"));

3. Scanner:
- allow read and parsing primitive types and strings using regular expressions
- breaks its input into tokens using delimiter pattern, which by default matches whitespace

Scanner sc = new Scanner(new File("input.txt"));

4. Files:
a) readAllLines
- read all lines from a file into a list
- ensures that the file is closed when all bytes have been read or IO error, or other runtime exception is thrown

List<String> lines = Files.readAllLines(Paths.get("input.txt"), StandardCharsets.UTF_8);

b) readAllBytes
- read whole file as a string

String data = new String(Files.readAllBytes(Paths.get("input.txt")));
